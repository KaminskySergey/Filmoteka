{"mappings":"iiBACAA,EAAA,SCDA,IAAAC,EAAAD,EAAA,S,uCCAAE,G,aAAAF,EAAA,U,aAMMG,G,aAAS,IAAI,EAAAC,EAAAC,UACbC,EAAUC,SAASC,cAAc,kBAExB,SAAAC,EAA0BC,EAAeC,GACtD,IAAMC,EAAYL,SAASM,eAAe,4BACpCC,EAAU,CACdC,WAAYL,EACZM,aAAc,GACdC,aAAc,EACdC,KAAM,EACNC,aAAa,EACbC,mBAAoB,kBACpBC,kBAAmB,iBACnBC,SAAU,CACRJ,KAAM,gDACNK,YACE,iEACFC,WACE,mGAGFC,mBACE,gHAGFC,WACE,sGAMAC,EAAa,IAAIC,EAAA1B,GAAJ,CAAeU,EAAWE,GAE7Ca,EAAWE,IAAI,aAAa,SAAUC,GACpCxB,EAAQyB,UAAY,GACpB5B,EAAOe,KAAOY,EAAUZ,KACxBf,EAAO6B,mBAAmBC,MAAK,SAAAC,IAC7B,EAAAC,EAAA9B,SAAc6B,EAASE,KAAKC,Q,OAIhCV,EAAWW,GAAG,aAAa,SAAUR,GAEnCxB,EAAQyB,UAAY,GACpB5B,EAAOe,KAAOY,EAAUZ,KACxBf,EAAOoC,YAAc5B,EACrBR,EAAOqC,kBAAkBP,MAAK,SAAAC,IAE5B,EAAAC,EAAA9B,SAAc6B,EAASE,KAAKC,Q,ODlDrB,IAATI,EAAU,GAERC,EAAW,8CACXC,EAAS,2CAMqB,SAA3BC,EAAiBC,GACxBC,aAAaC,QAAQ,SAAUC,KAAKC,UAAUJ,G,CAEhD,SAASK,IACP,IAAMC,EAAYL,aAAaM,QAAQ,UAGvC,OAFqBJ,KAAKK,MAAMF,E,UAKnBG,I,OAAAA,EAAf1B,EAAA3B,EAAA,CAAA2B,EAAA2B,GAAAC,MAAA,SAAAC,I,IACMC,EAGEtB,E,kFAHgBuB,EAAAtD,QAAMuD,IAC1B,iDAAwDC,OAAPlB,EAAO,oB,OADtDe,EAASI,EAAAC,KAGP3B,EAAOsB,EAAUtB,KAGvBQ,EAFmBR,EAAK4B,Q,4CALOC,MAAAC,KAAAC,U,UAalBC,EAAWC,G,OAAXC,EAAUL,MAAAC,KAAAC,U,UAAVG,I,OAAAA,EAAf1C,EAAA3B,EAAA,CAAA2B,EAAA2B,GAAAC,MAAA,SAAAC,EAA0BY,G,IACpBX,EAGEtB,EACAmC,EACAC,E,kFALgBb,EAAAtD,QAAMuD,IAC1B,GAAeC,OAAZnB,EAAS,KAA+GmB,OAA5GlB,EAAO,uGAA6GkB,OAARQ,I,UADzHX,EAASI,EAAAC,KAGP3B,EAAOsB,EAAUtB,KACjBmC,EAAab,EAAUe,OACvBD,EAAcpC,EAAKC,UAEN,MAAfkC,GAAsBC,EAAYE,OAAS,GAAC,C,uBAC9CC,IAEAlE,EAAiB2B,EAAK1B,cAAe2D,G,kBAC9BjC,G,iCAEA,G,6CAdc6B,MAAAC,KAAAC,U,CAkBuB,SAAvCS,EAAaC,GAKpB,OAJqB3B,IAAmB4B,MACtC,SAAAC,G,OAASA,EAAMC,OAASH,C,IAGJI,E,UAGTC,I,OAAAA,EAAftD,EAAA3B,EAAA,CAAA2B,EAAA2B,GAAAC,MAAA,SAAAC,EAAiCoB,G,yEAC/B1C,EAAAgD,QAAQpD,UAAY,GACpBU,EAAUmC,EAAaC,G,SAEFT,EAAW3B,G,OAApBqB,EAAAC,KAGL1B,QAAQ+C,SAAQ,SAAAC,GAErB,IAAMC,GAAS,EAAAnD,EAAAoD,kBAAiBF,GAEhClD,EAAAgD,QAAQK,mBAAmB,YAAaF,E,gDAXZrB,MAAAC,KAAAC,U,aAvCjBb,EAAkBW,MAAAC,KAAAC,U,CAUjCsB,GA8CA,IAAMC,EAASnF,SAASC,cAAc,iBAqBtC,SAASmE,IACPxC,EAAAgD,QAAQpD,UAAY,E,CAbLmB,IAGRkC,SAAQ,SAAAO,GAEb,IAAML,EAZV,SAA0BK,GACxB,MAAO,iDAC+C9B,OAAV8B,EAAM,MAAU9B,OAAN8B,EAAM,iB,CAU3CC,CAAiBD,EAAMX,MACtCU,EAAOF,mBAAmB,YAAaF,E,IAU3CO,EAAEH,GAAQI,MAAK,WACb,IAAMC,EAAQF,EAAE3B,MACd8B,EAAeD,EAAMjB,KAAK,UAC1BmB,EAAqBD,EAAatB,OACjBsB,EAAaE,OAAO,aAGvCH,EAAMI,OACNJ,EAAMK,KAAK,8BACXP,EAAE,QAAS,CACTQ,MAAO,aACPC,KAAMP,EAAMQ,SAAS,mBAAmBD,SACvCE,YAAYT,GAEf,IAAMU,EAAaV,EAAMW,KAAK,eAC9Bb,EAAE,QAAS,CACTQ,MAAO,qBACNG,YAAYC,GAIf,IAFA,IAAME,EAAaF,EAAWC,KAAK,qBAE1BE,EAAI,EAAGA,EAAIX,EAAoBW,IACtCf,EAAE,QAAS,CACTQ,MAAO,mBACPQ,KAAMhB,EAAE,SAAU,CAChBS,KAAMN,EAAac,GAAGF,GAAGN,WAG1BS,KAAK,aAAcf,EAAac,GAAGF,GAAGI,OACtCC,SAASN,GAGd,IAAMO,EAAaP,EAAW7B,KAAK,qBACnC6B,EAAWQ,QAAQ,GAEnBV,EAAWnE,GAAG,SAAS,WAChBuD,EAAE3B,MAAMkD,SAAS,OAcpBvB,EAAE3B,MAAMmD,YAAY,MACpBV,EAAWQ,QA9CF,OAgCTtB,EAAE3B,MAAMoD,SAAS,MACjBX,EAAWY,UAjCF,KAmCTL,EAAW5E,GAAG,SAAS,WACrB,IAAIkF,EAAa3B,EAAE3B,MAAM9B,KAAK,U,SAnFLyC,GAAlBK,EAAiBjB,MAAAC,KAAAC,U,CAoFxBsD,CAAkBD,GAClB3B,EAAE,UAAUmB,IAAIQ,GAAYT,KAAK,WAAY,YAC7CN,EAAWH,KAAKT,EAAE3B,MAAMY,KAAK,QAAQwB,QAErCK,EAAWQ,QAzCJ,KA0CPV,EAAWY,YAAY,K,iCExJ/BlF,EAAAnC,EAAA,S,aCAAE,EAAAF,EAAA,S,0BDAA,ICKM0H,EAAS,IAAI,EAAAtH,EAAAC,SACbsH,EAAUpH,SAASC,cAAc,kBDFvC,IAAMoH,EAAS,IAAI,EAAAxH,EAAAC,SACHE,SAASC,cAAc,kBAG7BuB,UAAY,GAEpB6F,EAAOC,YACPD,EAAO5F,mBAAmBC,MAAK,SAAAC,GCHlB,IAA0BxB,EACjCE,EACFE,EAFmCJ,EDIpBwB,EAASE,KAAK1B,cCH3BE,EAAYL,SAASM,eAAe,4BACtCC,EAAU,CACZC,WAAYL,EACZM,aAAc,GACdC,aAAc,EACdC,KAAM,EACNC,aAAa,EACbC,mBAAoB,kBACpBC,kBAAmB,iBACnBC,SAAU,CACRJ,KAAM,gDACNK,YACE,iEACFC,WACE,mGAGFC,mBACE,gHAGFC,WACE,sGAMa,IAAIE,EAAA1B,GAAJ,CAAeU,EAAWE,GAElCwB,GAAG,aAAa,SAAUR,GACnC6F,EAAQ5F,UAAY,GACpB2F,EAAOxG,KAAOY,EAAUZ,KACxBwG,EAAO1F,mBAAmBC,MAAK,SAAAC,IAC7B,EAAAC,EAAA9B,SAAc6B,EAASE,KAAKC,Q,QD9B9B,EAAAF,EAAA9B,SAAc6B,EAASE,KAAKC,Q","sources":["src/index.js","src/js/fiter-button-header/filter-button-header.js","src/js/pagination/pagination_genres.js","src/js/pagination/load_page.js","src/js/pagination/pagination.js"],"sourcesContent":["// header ========================\nimport './js/header/header';\nimport './js/fiter-button-header/filter-button-header';\nimport './js/up-button/_up-button';\nimport './js/firebase';\n\n// gallery ===========================\nimport './js/pagination/load_page';\n\nimport './js/gallery/poular_movie';\n\n// pagination=============\nimport './js/pagination/paginatin_search';\nimport './js/pagination/pagination_genres';\nimport './js/pagination/pagination';\n\n// feedback modal\nimport './js/feedback-modal/_feedback-modal';\n\n// footer ==============================\nimport './js/footer/footer-modal';\nimport './js/footer/modal-team';\nimport './js/footer/footer-modal-team';\n\n// modal movies ==============================\nimport './js/modal-movies/modal-movies';\nimport './js/modal-movies/modal-movie-buttons';\n\n\n// import './js/modal-movies/modal-movie-buttons';\n\n\n","import axios from 'axios';\nimport { createMoviesList } from '../gallery/poular_movie';\nimport { gallery } from '../gallery/poular_movie';\nimport createPagination from '../pagination/pagination_genres';\n// оглошую змінні\nlet genreId = 18;\n// оголошую констани\nconst BASE_URL = 'https://api.themoviedb.org/3/discover/movie';\nconst MY_KEY = 'api_key=102d4305e0abdbf0fd48836d5abb1978';\n// оголошую об'єкт подій\n// const refs = {\n//   filterList: document.querySelector('.genre-select'),\n// };\n// функція для запису масиву в локал строредж\nfunction addGenresToLocal(dataGenres) {\n  localStorage.setItem('genres', JSON.stringify(dataGenres));\n}\nfunction getGenresToLocal() {\n  const getGeners = localStorage.getItem('genres');\n  const parsedGeners = JSON.parse(getGeners);\n  // console.log(parsedGeners);\n  return parsedGeners;\n}\n// фунція для знаходженню та запису масиву жанрів з айдішками\nasync function fetchGenresToLocal() {\n  let urlObject = await axios.get(\n    `https://api.themoviedb.org/3/genre/movie/list?${MY_KEY}&language=en-US`\n  );\n  const data = urlObject.data;\n  const dataGenres = data.genres;\n\n  addGenresToLocal(dataGenres);\n}\n\nfetchGenresToLocal();\n\n// фетч для знаходження фільмів по жанрам\nasync function selectFilm(genreId) {\n  let urlObject = await axios.get(\n    `${BASE_URL}?${MY_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=${genreId}`\n  );\n  const data = urlObject.data;\n  const dataStatus = urlObject.status;\n  const dataResults = data.results;\n\n  if (dataStatus === 200 && dataResults.length > 0) {\n    clearOldMarkup();\n    // console.log(data);\n    createPagination(data.total_results, genreId);\n    return data;\n  } else {\n    return 0;\n  }\n}\n// Функція для знаходження id жанру через перебирання масиву\nfunction findIdGenres(nameGenres) {\n  let selectedGenres = getGenresToLocal().find(\n    gener => gener.name === nameGenres\n  );\n  //console.log(selectedGenres);\n  return selectedGenres.id;\n}\n// функція події для рендеру розмітки\nasync function selectGenerButton(nameGenres) {\n  gallery.innerHTML = '';\n  genreId = findIdGenres(nameGenres);\n\n  const movies = await selectFilm(genreId);\n  // console.log(movies)\n  //gallery.innerHTML = '';\n  movies.results.forEach(movie => {\n    // console.log(movie);\n    const markup = createMoviesList(movie);\n\n    gallery.insertAdjacentHTML('beforeend', markup);\n  });\n}\n\n// refs.filterList.addEventListener(\"click\", selectGenerButton);\n\nconst select = document.querySelector('.genre-select');\n\nfunction createGenersList(genre) {\n  return `\n  <option class=\"genre-select__item\" value=\"${genre}\">${genre}</option>\n   `;\n}\n\nfunction getGenersInfo() {\n  const genres = getGenresToLocal();\n  // console.log(movies)\n  //const markup = '';\n  genres.forEach(genre => {\n    // console.log(movie);\n    const markup = createGenersList(genre.name);\n    select.insertAdjacentHTML('beforeend', markup);\n  });\n}\n\ngetGenersInfo();\n\nfunction clearOldMarkup() {\n  gallery.innerHTML = '';\n}\n\n$(select).each(function () {\n  const _this = $(this),\n    selectOption = _this.find('option'),\n    selectOptionLength = selectOption.length,\n    selectedOption = selectOption.filter(':selected'),\n    duration = 450; // длительность анимации\n\n  _this.hide();\n  _this.wrap('<div class=\"select\"></div>');\n  $('<div>', {\n    class: 'new-select',\n    text: _this.children('option:disabled').text(),\n  }).insertAfter(_this);\n\n  const selectHead = _this.next('.new-select');\n  $('<div>', {\n    class: 'new-select__list',\n  }).insertAfter(selectHead);\n\n  const selectList = selectHead.next('.new-select__list');\n\n  for (let i = 1; i < selectOptionLength; i++) {\n    $('<div>', {\n      class: 'new-select__item',\n      html: $('<span>', {\n        text: selectOption.eq(i).text(),\n      }),\n    })\n      .attr('data-value', selectOption.eq(i).val())\n      .appendTo(selectList);\n  }\n\n  const selectItem = selectList.find('.new-select__item');\n  selectList.slideUp(0);\n\n  selectHead.on('click', function () {\n    if (!$(this).hasClass('on')) {\n      $(this).addClass('on');\n      selectList.slideDown(duration);\n\n      selectItem.on('click', function () {\n        let chooseItem = $(this).data('value');\n        selectGenerButton(chooseItem);\n        $('select').val(chooseItem).attr('selected', 'selected');\n        selectHead.text($(this).find('span').text());\n\n        selectList.slideUp(duration);\n        selectHead.removeClass('on');\n      });\n    } else {\n      $(this).removeClass('on');\n      selectList.slideUp(duration);\n    }\n  });\n});\n","import Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.min.css';\nimport MoviesApi from '../api';\nimport getMoviesInfo from '../gallery/poular_movie';\n// import getMoviesInfo from '../fiter-button-header/filter-button-header';\n\nconst movies = new MoviesApi();\nconst gallery = document.querySelector('.gallery__list');\n\nexport default function createPagination(total_results, genreId) {\n  const container = document.getElementById('tui-pagination-container');\n  const options = {\n    totalItems: total_results,\n    itemsPerPage: 20,\n    visiblePages: 5,\n    page: 1,\n    centerAlign: true,\n    firstItemClassName: 'tui-first-child',\n    lastItemClassName: 'tui-last-child',\n    template: {\n      page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n      currentPage:\n        '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n      moveButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</a>',\n      disabledMoveButton:\n        '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</span>',\n      moreButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n        '<span class=\"tui-ico-ellip\">...</span>' +\n        '</a>',\n    },\n  };\n\n  const pagination = new Pagination(container, options);\n\n  pagination.off('afterMove', function (eventData) {\n    gallery.innerHTML = '';\n    movies.page = eventData.page;\n    movies.getPopularMovies().then(response => {\n      getMoviesInfo(response.data.results);\n    });\n  });\n\n  pagination.on('afterMove', function (eventData) {\n    //  console.log(genreId);\n    gallery.innerHTML = '';\n    movies.page = eventData.page;\n    movies.with_genres = genreId;\n    movies.getGenersMovies().then(response => {\n      // console.log(response.data);\n      getMoviesInfo(response.data.results);\n    });\n  });\n}\n","import getMoviesInfo from '../gallery/poular_movie';\nimport MoviesApi from '../api';\nimport createPagination from '../pagination/pagination';\n\nconst movies = new MoviesApi();\nconst gallery = document.querySelector('.gallery__list');\n\nexport default function loadPage() {\n  gallery.innerHTML = '';\n\n  movies.resetPage();\n  movies.getPopularMovies().then(response => {\n    createPagination(response.data.total_results);\n    getMoviesInfo(response.data.results);\n  });\n}\n\nloadPage();\n","import Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.min.css';\nimport MoviesApi from '../api';\nimport getMoviesInfo from '../gallery/poular_movie';\n\nconst movies = new MoviesApi();\nconst gallery = document.querySelector('.gallery__list');\n\nexport default function createPagination(total_results) {\n  const container = document.getElementById('tui-pagination-container');\n  let options = {\n    totalItems: total_results,\n    itemsPerPage: 20,\n    visiblePages: 5,\n    page: 1,\n    centerAlign: true,\n    firstItemClassName: 'tui-first-child',\n    lastItemClassName: 'tui-last-child',\n    template: {\n      page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n      currentPage:\n        '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n      moveButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</a>',\n      disabledMoveButton:\n        '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</span>',\n      moreButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n        '<span class=\"tui-ico-ellip\">...</span>' +\n        '</a>',\n    },\n  };\n\n  const pagination = new Pagination(container, options);\n\n  pagination.on('afterMove', function (eventData) {\n    gallery.innerHTML = '';\n    movies.page = eventData.page;\n    movies.getPopularMovies().then(response => {\n      getMoviesInfo(response.data.results);\n    });\n  });\n}\n"],"names":["parcelRequire","$bpxeT","$1VFfL","$8cf2c882d2e01e70$var$movies","$b7ONl","default","$8cf2c882d2e01e70$var$gallery","document","querySelector","$8cf2c882d2e01e70$export$2e2bcd8739ae039","total_results","genreId","container","getElementById","options","totalItems","itemsPerPage","visiblePages","page","centerAlign","firstItemClassName","lastItemClassName","template","currentPage","moveButton","disabledMoveButton","moreButton","pagination","$parcel$interopDefault","off","eventData","innerHTML","getPopularMovies","then","response","$aKpRc","data","results","on","with_genres","getGenersMovies","$98f986ecef9e7719$var$genreId","$98f986ecef9e7719$var$BASE_URL","$98f986ecef9e7719$var$MY_KEY","$98f986ecef9e7719$var$addGenresToLocal","dataGenres","localStorage","setItem","JSON","stringify","$98f986ecef9e7719$var$getGenresToLocal","getGeners","getItem","parse","$98f986ecef9e7719$var$_fetchGenresToLocal","$2TvXO","mark","_callee","urlObject","$dIxxU","get","concat","_ctx","sent","genres","apply","this","arguments","$98f986ecef9e7719$var$selectFilm","genreId1","$98f986ecef9e7719$var$_selectFilm","dataStatus","dataResults","status","length","$98f986ecef9e7719$var$clearOldMarkup","$98f986ecef9e7719$var$findIdGenres","nameGenres","find","gener","name","id","$98f986ecef9e7719$var$_selectGenerButton","gallery","forEach","movie","markup","createMoviesList","insertAdjacentHTML","$98f986ecef9e7719$var$fetchGenresToLocal","$98f986ecef9e7719$var$select","genre","$98f986ecef9e7719$var$createGenersList","$","each","_this","selectOption","selectOptionLength","filter","hide","wrap","class","text","children","insertAfter","selectHead","next","selectList","i","html","eq","attr","val","appendTo","selectItem","slideUp","hasClass","removeClass","addClass","slideDown","chooseItem","$98f986ecef9e7719$var$selectGenerButton","$899c14056b4eb0a5$var$movies","$899c14056b4eb0a5$var$gallery","$30c780d7768c9ed8$var$movies","resetPage"],"version":3,"file":"index.b76f362a.js.map"}